on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - "v*" # Push events to matching v*, i.e. v1.0, v20.15.10

name: Upload Release Asset

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: macos-latest
            target: x86_64-apple-darwin
    name: Release
    runs-on: ${{ matrix.os }}
    env:
      PROJECT: procrast-cli
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Build and package
        run: |
          RUSTFLAGS="--cfg production" cargo build --release --target ${{ matrix.target }}
          tar czvf $PROJECT-${{ matrix.target }}.tar.gz ./target/${{ matrix.target }}/release/$PROJECT README.md LICENSE.md
      - name: Create Release
        if: matrix.os == ubuntu-latest
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./${{env.PROJECT}}-${{ matrix.target }}.tar.gz
          asset_name: ${{env.PROJECT}}-${{ matrix.target }}.tar.gz
          asset_content_type: application/gzip
